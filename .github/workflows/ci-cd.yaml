name: Continuous Integration and Deployment

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: MY_WEBAPP_NAME   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x'             # set this to the .NET Core version to use

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps: 
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up .NET Core SDK ${{env.DOTNET_VERSION}}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}
      
      - name: Start SQL Server
        run: |
          docker run -d -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=P@ssw0rd" -e "MSSQL_PID=Express" -p 1433:1433 -d mcr.microsoft.com/mssql/server:latest 

      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
         time: '5s'

      - name: Restore
        run: dotnet restore
             
      - name: Build app
        run: dotnet build -c Release --no-restore 
      
     
      - name: Run automated tests
        env:
          ConnectionStrings__DefaultConnection: Server=localhost;Database=CICD_Demo_Test;User=sa;Password=P@ssw0rd
        run: dotnet test -c Release --no-build
      
      #- name: Publish
       # run: dotnet publish --no-build -c Release -o ./Published
      - name: Publish AnimalAPI
        run: dotnet publish AnimalAPI/AnimalAPI.csproj -c Release -o ./Published/AnimalAPI
              
      - name: Publish Animalcounting.Tests
        run: |
          dotnet publish Animalcounting.Tests/Animalcounting.Tests.csproj -c Release -o ./Published/Animalcounting.Tests/    
          mv ./Published/Animalcounting.Tests/appsettings.json ./Published/Animalcounting.Tests/Animalcounting.Tests.appsettings.json


      - name: Deploy web App in Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: Animalcounting
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_SECRET }}
          package: ./Published
